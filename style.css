/*********************************************************/
/*                      Craig Kelly                      */
/*        Thinkful Engineering Flex, 4.1.9 (22.9)        */
/*         Assessment: Frontend foundations, v2.         */
/* This reflects human grader's requested changes to v1. */
/*             Revisions submitted 10-8-23.              */
/*********************************************************/
/*
I made alterations to CSS on 10-7, which fixed one problem but created another.
More alterations 10-8 undid that.  It should all be working now.  
Especially after seeing how Bootstrap applies classes, but also after having made these minor tweaks to this particular past assignment on 10-7 and 10-8, I have a much better understanding of how to make and apply my own classes.  This particular assignment had been done largely "by feel" and without full understanding. I realize that the HTML is a little screwy and the CSS is a true mess, but the webpage appears OK now and I need to move on to the next unit.
*/

/* -------  General Styles ------- */
main img {
  width: 100%;
}

body {
  font-family: "Lato", sans-serif;
}

h2 {
  font-size: 30px; /* was 26 */
  font-weight: 400;
  margin: 0px 10px 0px 10px;
  /*margin: 10px 10px 10px 10px;*/
  text-align: center;
}

h3 {
  font-size: 18px;
  font-weight: 500;
}

header li {
  font-size: 24px;
}

p {
  line-height: 1.25em; /* was 1.5  */
}

section {
  padding: 20px 20px 20px 20px;
} /* T R B L */

section.alternate-background {
  background-color: #00a699;
  color: #fff;
}

.alternate-background .group {
  display: flex;
  flex-direction: column;
}

.alternate-background .item {
  flex:1;
}

alternative-background .item-double {
  flex:2;
}

/* ---  Groups & Items --- */

.group {
  display: flex;
  flex-direction: column;
}

.item {
  /* display: flex; */
  /* change made 10-7 : made direction row instead of column.  But then that threw off titles in the Ideas section and rows vs cols in the Host section */
  /* commented out `.item`'s flex display on 10-8.  That undid these problems but then labels and inputs inside fieldset were no longer justified with space between, so I added the rule following this one */
  flex-direction: row; 
  justify-content: space-between; 
  margin: 10px ;
}

/*added 10-8 to fix problems created yesterday*/
form fieldset .group .item {
  display: flex;
}

.flex-grid .item {
  width: 100%;
}

.item label {
  flex: 1;
}

.item input, .item select {
  flex: 1.5; /* 2 looked like a bit much */
  height: 25px;
}

.item-double {
  flex: 2;
}

/* -------  Navigation ------- */

header {
  background-color: #ff385c;
  padding: 20px 20px 1px 20px; /* 3rd param was 0 */
  text-align: center;
}

/* This was a part of the code which my human grader asked me to change.  He said that at around 375px my logo font overflowed the available space.  So I changed this on 10-7, adding a rule for logo font size in the media query section that makes the original 72px font size now only kick in with larger screens, and I reduced it here to a size which works on very narrow screens */ 
.logo { 
  font-family: "Pangolin", cursive;
  font-size: 60px;
  color: #fff;
}

header nav ul {
  display: flex;
  justify-content: center;
}

header nav ul li {
  list-style-type: none;
}

/* while I was at it on 10-7 I also tinkered with li padding to get list centered at all screen widths.  I couldn't, though, and I think this is because of the offset from (now-invisible) bullet points.  List items which looked centered under 60px logo at narrowest possible screen width (320px) are already visibly misaligned by the time you hit 350px.  It's not the logo that off; it's the unordered list. */
header nav ul li a {
  color: #fff;
  text-decoration: none;
  padding: 0px 10px 0px 0px;
}

header nav ul li a:hover {
  color: #bdbdbd;
  text-decoration: none;
}

/* -------  Search Form ------- */
form {
  border: 2px solid #ff385c;
  padding: 0px;
  margin: 10px;
}

form fieldset {
  border: 0;
  margin: 0;
  padding: 5;
}

form label, form input, form select{
  font-weight: bold;
}

form button {
  background-color: #ff385c;
  border: none;
  color: #fff;
  font-size: 24px;
  padding: 15px;
  width: 100%;
}

/* -------  Footer ------- */

footer {
  background-color: #ff385c;
}

footer p {
  color: #fff;
  text-align: center;
  padding: 20px;
  margin:0;
}

/*******************************Media Query*********************/
@media all and (min-width: 768px) {

   /* moved this down here on 10-7 */
  .logo {
    font-size: 72px;
    }

  header {  
    padding: 20px 20px 20px 20px; 
    display: flex; 
    justify-content: space-between; 
    align-items: center; 
  }



fieldset .group { 
    display: flex;
    flex-direction:row;
    justify-content: space-between;
  } 

  /* change made 10-7 */
  fieldset .group .item {
    display: flex;
    flex-direction:column;
  }

  .item input, 
  .item select, 
  .item button{
    width: calc(100px + ((100vw - 768px) / 7))}
    /* Input boxes and button cannot be set to any wider than 100px and still fit in the fieldset at 768px vw.  As viewport widens to 4K, any leftover pixels are distributed to elements and spaces between them, respectively, at a 2:1 ratio. */ 
 
  .flex-grid {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
  }

  .flex-grid .item {
    width: calc(100vw / 2 - 74px); 
  }
  /* the above calculation works all the way to 4Kpx vw */

   alternate-background {
    display: flex;
  }

  .alternate-background .item {
    flex:1;
  }

  .alternate-background .group {
    display: flex;
    flex-direction: row;   
    justify-content: center;
    flex-flow: row nowrap;
    align-items: center;
  }
  
  .alternate-background .group .item h2 {font-size: 18px};
  
  .alternate-background .group .item ul li {font-size: 4px};
 
  
 }
